Radu Sabina - 331CB - Tema2 ASC

Tema presupune realizarea unei operatii de inmultire de matrici
in 3 moduri in limbajul C.

Descriere

	Se da urmatoarea operatie cu matrice, unde A si B sunt matrice 
	patratice N x N, iar A este matrice superior triunghiulara, At este transpusa lui A si Bt transpusa lui B.

	C = B × A × At + Bt × B

Organizare
	Tema are urmatoarea organizare:

	-main.c: contine functia main, precum si alte functii folosite pentru citirea fisierului cu descrierea testelo, scrierea matricei rezultat intr-un fisier, generarea datelor de intrare si rularea unui test.
	-Makefile
	-utils.h
	-solver_blas.c: implementarea variantei blas
	-solver_neopt.c: implementarea variantei neoptimizate
	-solver_opt.c: implementarea variantei optimizate
	-compare.c: utilitar ce poate fi folosit pentru a compara doua fisiere rezultat

Rulare si testare

	Rularea si testarea se realizeaza pe cluster. In urma rularii comenzii make vor rezulta 3 fisiere binare: tema2_blas, tema2_neopt si tema2_opt_m. Testarea se face folosind utilitarul compare.
	./tema2_<mod> <input_file>
	./compare  out1  /export/asc/tema2/out1  <tolerance>

Implementare

	METODA BLAS:
	Am folosit functiile BLAS Atlas pentru a realiza eficient inmultirea matricilor. Am implementat functia copy care intoarce o copie a unei matrice, folosita pentru rezultate intermediare ale functiilor BLAS. 
	Deoarece A este o matrice superior triunghiulara, am folosit pentru inmultire functia cblas_dtrmm.
	Am folosit functia cblas_dgemm pentru realizarea inmultirii dintre 2 matrici oarecare si adunarea cu o a treia matrice, astfel obtinand rezultatul operatiei cerute. Timpii aproximativi de rulare sunt:

	Run=./tema2_blas: N=300: Time=0.017337
	Run=./tema2_blas: N=400: Time=0.037538
	Run=./tema2_blas: N=500: Time=0.075754
	Run=./tema2_blas: N=600: Time=0.125300
	Run=./tema2_blas: N=700: Time=0.191646
	Run=./tema2_blas: N=800: Time=0.278789
	Run=./tema2_blas: N=900: Time=0.389245
	Run=./tema2_blas: N=1000: Time=0.547053
	Run=./tema2_blas: N=1100: Time=0.716755
	Run=./tema2_blas: N=1200: Time=0.916454

	==3082556== Memcheck, a memory error detector
	==3082556== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
	==3082556== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082556== Command: ./tema2_blas /export/asc/tema2/input_valgrind
	==3082556== Parent PID: 3082112
	==3082556==
	==3082556==
	==3082556== HEAP SUMMARY:
	==3082556==     in use at exit: 0 bytes in 0 blocks
	==3082556==   total heap usage: 77 allocs, 77 frees, 7,498,052 bytes allocated
	==3082556==
	==3082556== All heap blocks were freed -- no leaks are possible
	==3082556==
	==3082556== For lists of detected and suppressed errors, rerun with: -s
	==3082556== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

	==3082590== Cachegrind, a cache and branch-prediction profiler
	==3082590== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
	==3082590== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082590== Command: ./tema2_blas /export/asc/tema2/input_valgrind
	==3082590== Parent PID: 3082112
	==3082590==
	--3082590-- warning: L3 cache found, using its data for the LL simulation.
	--3082590-- warning: specified LL cache: line_size 64  assoc 16  total_size 12,582,912
	--3082590-- warning: simulated LL cache: line_size 64  assoc 24  total_size 12,582,912
	==3082590==
	==3082590== I   refs:      251,390,962
	==3082590== I1  misses:         16,451
	==3082590== LLi misses:          3,198
	==3082590== I1  miss rate:        0.01%
	==3082590== LLi miss rate:        0.00%
	==3082590==
	==3082590== D   refs:       94,293,543  (88,648,707 rd   + 5,644,836 wr)
	==3082590== D1  misses:      1,609,383  ( 1,346,610 rd   +   262,773 wr)
	==3082590== LLd misses:         97,008  (    11,725 rd   +    85,283 wr)
	==3082590== D1  miss rate:         1.7% (       1.5%     +       4.7%  )
	==3082590== LLd miss rate:         0.1% (       0.0%     +       1.5%  )
	==3082590==
	==3082590== LL refs:         1,625,834  ( 1,363,061 rd   +   262,773 wr)
	==3082590== LL misses:         100,206  (    14,923 rd   +    85,283 wr)
	==3082590== LL miss rate:          0.0% (       0.0%     +       1.5%  )
	==3082590==
	==3082590== Branches:        4,567,287  ( 4,311,800 cond +   255,487 ind)
	==3082590== Mispredicts:        68,320  (    67,406 cond +       914 ind)
	==3082590== Mispred rate:          1.5% (       1.6%     +       0.4%   )

	METODA NEOPTIMIZATA:
	Se folosesc inmultirile normale de matrice, fara vreo imbunatatire care sa optimizeze timpul. Operatia se realizeaza tinand cont ca matricea A este superior triunghiulara, avand functii separate pentru inmultirea cu matricea triunghiulara. 
	multiply1 - face operatia de A x Atr
	multiply2 - face operatia de B x A x Atr
	multiply3 - face operatia de B x Btr
	sum - face suma dintre 2 matrici

	Timpii aproximativi de rulare sunt:

	Run=./tema2_neopt: N=300: Time=0.601568
	Run=./tema2_neopt: N=400: Time=1.472718
	Run=./tema2_neopt: N=500: Time=2.889187
	Run=./tema2_neopt: N=600: Time=5.194386
	Run=./tema2_neopt: N=700: Time=8.428563
	Run=./tema2_neopt: N=800: Time=12.258484
	Run=./tema2_neopt: N=900: Time=16.432093
	Run=./tema2_neopt: N=1000: Time=23.632355
	Run=./tema2_neopt: N=1100: Time=30.095976
	Run=./tema2_neopt: N=1200: Time=42.819710

	==3082560== Memcheck, a memory error detector
	==3082560== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
	==3082560== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082560== Command: ./tema2_neopt /export/asc/tema2/input_valgrind
	==3082560== Parent PID: 3082112
	==3082560==
	==3082560==
	==3082560== HEAP SUMMARY:
	==3082560==     in use at exit: 0 bytes in 0 blocks
	==3082560==   total heap usage: 10 allocs, 10 frees, 7,689,812 bytes allocated
	==3082560==
	==3082560== All heap blocks were freed -- no leaks are possible
	==3082560==
	==3082560== For lists of detected and suppressed errors, rerun with: -s
	==3082560== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


	==3082566== Cachegrind, a cache and branch-prediction profiler
	==3082566== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
	==3082566== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082566== Command: ./tema2_neopt /export/asc/tema2/input_valgrind
	==3082566== Parent PID: 3082112
	==3082566==
	--3082566-- warning: L3 cache found, using its data for the LL simulation.
	--3082566-- warning: specified LL cache: line_size 64  assoc 16  total_size 12,582,912
	--3082566-- warning: simulated LL cache: line_size 64  assoc 24  total_size 12,582,912
	==3082566==
	==3082566== I   refs:      7,394,843,801
	==3082566== I1  misses:            1,627
	==3082566== LLi misses:            1,547
	==3082566== I1  miss rate:          0.00%
	==3082566== LLi miss rate:          0.00%
	==3082566==
	==3082566== D   refs:      3,697,706,897  (3,534,722,749 rd   + 162,984,148 wr)
	==3082566== D1  misses:      199,097,752  (  199,046,497 rd   +      51,255 wr)
	==3082566== LLd misses:          122,776  (       91,686 rd   +      31,090 wr)
	==3082566== D1  miss rate:           5.4% (          5.6%     +         0.0%  )
	==3082566== LLd miss rate:           0.0% (          0.0%     +         0.0%  )
	==3082566==
	==3082566== LL refs:         199,099,379  (  199,048,124 rd   +      51,255 wr)
	==3082566== LL misses:           124,323  (       93,233 rd   +      31,090 wr)
	==3082566== LL miss rate:            0.0% (          0.0%     +         0.0%  )
	==3082566==
	==3082566== Branches:        164,154,064  (  163,913,372 cond +     240,692 ind)
	==3082566== Mispredicts:         502,225  (      501,978 cond +         247 ind)
	==3082566== Mispred rate:            0.3% (          0.3%     +         0.1%   )



	METODA OPTIMIZATA:
	Se aduc imbunatatiri codului de la varianta neoptimizata pentru obtinerea unor timpi mai buni, avand aceeasi complexitate. Imbunatatirile constau in principiu in optimizarea constantelor si al accesului la vectori. 
	Accesul la matrice se face folosind pointeri pentru a realiza mai rapid operatia de inmultire, renuntandu-se la dereferentiere. Am folosit register pentru a utiliza optim acea resursa. Rezultatul din res[i][j] se calculeaza in constanta sum pentru a reduce numarul de accesari la memorie. Timpii aproximativi de rulare sunt:

	Run=./tema2_opt_m: N=300: Time=0.256360
	Run=./tema2_opt_m: N=400: Time=0.612902
	Run=./tema2_opt_m: N=500: Time=1.216786
	Run=./tema2_opt_m: N=600: Time=2.022532
	Run=./tema2_opt_m: N=700: Time=3.253200
	Run=./tema2_opt_m: N=800: Time=4.895292
	Run=./tema2_opt_m: N=900: Time=7.099067
	Run=./tema2_opt_m: N=1000: Time=9.165548
	Run=./tema2_opt_m: N=1100: Time=14.311551
	Run=./tema2_opt_m: N=1200: Time=17.698635

	==3082559== Memcheck, a memory error detector
	==3082559== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
	==3082559== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082559== Command: ./tema2_opt_m /export/asc/tema2/input_valgrind
	==3082559== Parent PID: 3082112
	==3082559==
	==3082559==
	==3082559== HEAP SUMMARY:
	==3082559==     in use at exit: 0 bytes in 0 blocks
	==3082559==   total heap usage: 10 allocs, 10 frees, 7,689,812 bytes allocated
	==3082559==
	==3082559== All heap blocks were freed -- no leaks are possible
	==3082559==
	==3082559== For lists of detected and suppressed errors, rerun with: -s
	==3082559== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

	==3082579== Cachegrind, a cache and branch-prediction profiler
	==3082579== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
	==3082579== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
	==3082579== Command: ./tema2_opt_m /export/asc/tema2/input_valgrind
	==3082579== Parent PID: 3082112
	==3082579==
	--3082579-- warning: L3 cache found, using its data for the LL simulation.
	--3082579-- warning: specified LL cache: line_size 64  assoc 16  total_size 12,582,912
	--3082579-- warning: simulated LL cache: line_size 64  assoc 24  total_size 12,582,912
	==3082579==
	==3082579== I   refs:      2,985,730,475
	==3082579== I1  misses:            1,632
	==3082579== LLi misses:            1,551
	==3082579== I1  miss rate:          0.00%
	==3082579== LLi miss rate:          0.00%
	==3082579==
	==3082579== D   refs:      1,332,270,460  (1,328,885,390 rd   + 3,385,070 wr)
	==3082579== D1  misses:      139,271,605  (  139,020,348 rd   +   251,257 wr)
	==3082579== LLd misses:          122,776  (       31,686 rd   +    91,090 wr)
	==3082579== D1  miss rate:          10.5% (         10.5%     +       7.4%  )
	==3082579== LLd miss rate:           0.0% (          0.0%     +       2.7%  )
	==3082579==
	==3082579== LL refs:         139,273,237  (  139,021,980 rd   +   251,257 wr)
	==3082579== LL misses:           124,327  (       33,237 rd   +    91,090 wr)
	==3082579== LL miss rate:            0.0% (          0.0%     +       2.7%  )
	==3082579==
	==3082579== Branches:        164,154,287  (  163,913,583 cond +   240,704 ind)
	==3082579== Mispredicts:         502,275  (      502,026 cond +       249 ind)
	==3082579== Mispred rate:            0.3% (          0.3%     +       0.1%   )


Compararea rezultatelor

	Graficele se afla in folderul graf si contin interpretarea valorilor lui N din intervalul [300...1200].
	Se observa ca metoda BLAS este cea mai avantajoasa, folosind functii specializate in lucrul cu operatii cu matrici. Astfel, pentru N = 1000, obtinem blas = 0.54s si opt_m = 9.16s, deci un timp de aproape 17 ori mai bun in cazul BLAS.
	Fata de varianta neoptimizata, metoda optimizata este de 2 ori mai buna. De exemplu, pentru N = 1200, avem neopt = 42.81s si pentru opt_m = 17.69s. Prin urmare, folosirea pointerilor, accesul direct la memorie permit o optimizare radicala a rezultatelor.


Bibliografie:
	https://ocw.cs.pub.ro/courses/asc/laboratoare/05
	https://ocw.cs.pub.ro/courses/asc/laboratoare/04
